{"version":3,"sources":["components/GoodCard/GoodCard.jsx","components/GoodsList/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodCard","good","name","GoodsList","goods","className","map","id","goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setReversedOrder","visibleGoods","preparedGoods","index","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","type","onClick","cn","ReactDOM","render","document","getElementById"],"mappings":"4OAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,EAAKC,QCCdC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,oBAAIC,UAAU,YAAd,SACGD,EAAME,KAAI,SAAAL,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKM,UCEzBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,sBAC5BC,EAAuB,iBAgCtB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAuCF,oBAAS,GAAhD,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAjCR,SAA0Bb,EAAOS,EAAWE,GAC1C,IAAIG,EAAgBd,EAAME,KAAI,SAACL,EAAMkB,GAAP,MAC5B,CACEjB,KAAMD,EACNM,GAAIY,EAAQ,MAuBhB,OAnBIN,GACFK,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAMnB,KAAKqB,cAAcD,EAAMpB,MAExC,KAAKQ,EACH,OAAOW,EAAMnB,KAAKsB,OAASF,EAAMpB,KAAKsB,OAExC,QACE,OAAO,MAKXT,IACFG,EAAgBA,EAAcO,WAGzBP,EAMcQ,CACnBlB,EAAiBK,EAAWE,GAG9B,OACE,sBAAKV,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEsB,KAAK,SACLC,QAAS,kBAAOd,EAAaL,IAC7BJ,UACEwB,IACE,SACA,UACA,CAAE,WAAYhB,IAAcJ,IAPlC,iCAaA,wBACEkB,KAAK,SACLC,QAAS,kBAAOd,EAAaJ,IAC7BL,UACEwB,IACE,SACA,aACA,CAAE,WAAYhB,IAAcH,IAPlC,4BAaA,wBACEiB,KAAK,SACLtB,UAAWwB,IAAG,SAAU,aAAc,CAAE,YAAad,IACrDa,QAAS,kBAEHZ,GADJD,IAJJ,sBAYEF,GAAaE,IACb,wBACEY,KAAK,SACLtB,UAAU,4BACVuB,QAAS,WACPd,EAAa,IACbE,GAAiB,IALrB,sBAeJ,cAAC,EAAD,CAAWZ,MAAOa,QClHxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.23d4b869.chunk.js","sourcesContent":["export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">{good.name}</li>\n);\n","import { GoodCard } from '../GoodCard/GoodCard';\n\nexport const GoodsList = ({ goods }) => (\n  <ul className=\"GoodsList\">\n    {goods.map(good => (\n      <GoodCard good={good} key={good.id} />\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'sort alphabetically';\nconst SORT_FIELD_BY_LENGTH = 'sort by length';\n\nfunction getPreparedGoods(goods, sortField, isReversed) {\n  let preparedGoods = goods.map((good, index) => (\n    {\n      name: good,\n      id: index + 1,\n    }\n  ));\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.name.localeCompare(good2.name);\n\n        case SORT_FIELD_BY_LENGTH:\n          return good1.name.length - good2.name.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setReversedOrder] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, sortField, isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => (setSortField(SORT_FIELD_ALPHABETICALLY))}\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY },\n            )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => (setSortField(SORT_FIELD_BY_LENGTH))}\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortField !== SORT_FIELD_BY_LENGTH },\n            )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          onClick={() => (\n            isReversed\n              ? setReversedOrder(false)\n              : setReversedOrder(true)\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReversedOrder(false);\n            }}\n          >\n            Reset\n          </button>\n        )\n        }\n\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}